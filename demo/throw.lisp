(defun fact (n ) (if (= n 1) 1 (* n (fact (- n 1)))))
(defun pow (x n ) (if (= n 0) 1 (if (= n 1) x (* x (pow x (- n 1))))))
(defun item_sin (x n )  (let (m s ) (setq m (+ (* 2 n) 1)) (setq s (if (= (mod n 2) 0) 1 -1)) (/ (* s (pow x m)) (fact m))))
(defun taylor_sin (x n ) (if (= n 0) (item_sin x 0) (+ (item_sin x n) (taylor_sin x (- n 1)))))
(defun item_cos (x n )  (let (m s ) (setq m (* 2 n)) (setq s (if (= (mod n 2) 0) 1 -1)) (/ (* s (pow x m)) (fact m))))
(defun taylor_cos (x n ) (if (= n 0) 1 (+ (item_cos x n) (taylor_cos x (- n 1)))))
(defun position_x (theta ) (/ (* (pow 45.830000d0 2) (taylor_sin (* 2 theta) 30)) 9.806650d0))
(defun angle_range (start end )  (format t "~d~%" start) (format t "~d~%" (position_x (* (/ start 180) 3.141593d0))) (cond ((> start (- end 1))  0) (t  (angle_range (+ start 1) end))))
(defun main ()  (angle_range 0 90))
